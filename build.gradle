buildscript {
    ext {
        springCloudVersion = "2023.0.1"
        queryDslVersion = '5.1.0'
        mapStructVersion = '1.5.5.Final'
        springCloudVersion = '2023.0.1'
        springCloudAzureVersion = '5.12.0'
        azureBlobStorageVersion = '12.27.0'
        apacheCommonsVersion = '3.16.0'
        jwtApiVersion = '0.12.6'
        openApiVersion = '2.6.0'
        azureEmailVersion = '1.0.15'
        azureSmsVersion = '1.1.26'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.6'
    id 'io.spring.dependency-management' version '1.1.5'
    id "org.sonarqube" version "4.4.1.3373"
}

sonar {
    properties {
        property "sonar.projectKey", "Arpha-Software_tabletop-games-shop-be"
        property "sonar.organization", "arpha-software"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    tasks.register('wrapper', Wrapper) {
        gradleVersion = '8.7'
        validateDistributionUrl = false
    }

    tasks.register("prepareKotlinBuildScriptModel"){}
}

allprojects {
    group = 'org.arpha'
    version = '1.0.0'

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'

        implementation 'org.flywaydb:flyway-core'
        implementation "io.jsonwebtoken:jjwt-api:${jwtApiVersion}"
        implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openApiVersion}"
        implementation "org.apache.commons:commons-lang3:${apacheCommonsVersion}"
        implementation "org.mapstruct:mapstruct:${mapStructVersion}"
        implementation "com.querydsl:querydsl-core:${queryDslVersion}"
        implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
        implementation "com.azure:azure-storage-blob:${azureBlobStorageVersion}"

        implementation "com.azure:azure-communication-email:${azureEmailVersion}"
        implementation "com.azure:azure-communication-sms:${azureSmsVersion}"

        compileOnly 'org.projectlombok:lombok'
        runtimeOnly 'org.postgresql:postgresql'
        runtimeOnly "io.jsonwebtoken:jjwt-impl:${jwtApiVersion}"
        runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jwtApiVersion}"

        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
        annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
        annotationProcessor(
                "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta",
                "jakarta.persistence:jakarta.persistence-api:3.1.0"
        )
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    bootJar{
        enabled = false
    }
}
